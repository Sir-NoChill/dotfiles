# ============================================================================
# ZSH CONFIGURATION (.zshrc)
# ============================================================================

# ----------------------------------------------------------------------------
# BASIC ZSH SETTINGS
# ----------------------------------------------------------------------------

# Enable shell completion
autoload -Uz compinit
compinit

# Enable syntax highlighting (requires zsh-syntax-highlighting package)
if [ -f /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
    source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
elif [ -f /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
    source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

# Enable autosuggestions (requires zsh-autosuggestions package)
if [ -f /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
    source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
elif [ -f /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
    source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

# ----------------------------------------------------------------------------
# HISTORY CONFIGURATION
# ----------------------------------------------------------------------------

# Create XDG data directory if it doesn't exist
export XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
mkdir -p "$XDG_DATA_HOME/zsh"

# History settings
HISTFILE="$XDG_DATA_HOME/zsh/history"
HISTSIZE=50000
SAVEHIST=50000
setopt SHARE_HISTORY        # Share history between sessions
setopt HIST_IGNORE_DUPS     # Don't record duplicate entries
setopt HIST_IGNORE_SPACE    # Don't record entries starting with space

# ----------------------------------------------------------------------------
# OH-MY-ZSH CONFIGURATION
# ----------------------------------------------------------------------------

# Path to oh-my-zsh installation
export ZSH="$HOME/.oh-my-zsh"

# Oh-My-Zsh plugins
plugins=(
    git
    sudo
    history
    fzf
)

# Source Oh-My-Zsh (install from https://ohmyz.sh/ if not present)
if [ -f "$ZSH/oh-my-zsh.sh" ]; then
    source "$ZSH/oh-my-zsh.sh"
fi

# ----------------------------------------------------------------------------
# POWERLEVEL10K THEME
# ----------------------------------------------------------------------------

# Source Powerlevel10k theme (install from https://github.com/romkatv/powerlevel10k)
if [ -f ~/powerlevel10k/powerlevel10k.zsh-theme ]; then
    source ~/powerlevel10k/powerlevel10k.zsh-theme
fi

# Source Powerlevel10k configuration
if [ -f ~/.p10k.zsh ]; then
    source ~/.p10k.zsh
fi

# ----------------------------------------------------------------------------
# ZSH-NIX-SHELL PLUGIN
# ----------------------------------------------------------------------------

# Source zsh-nix-shell plugin if available
if [ -f ~/.zsh-plugins/zsh-nix-shell/nix-shell.plugin.zsh ]; then
    source ~/.zsh-plugins/zsh-nix-shell/nix-shell.plugin.zsh
fi

# ----------------------------------------------------------------------------
# PATH CONFIGURATION
# ----------------------------------------------------------------------------

# Add custom paths to PATH
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/bin:$PATH"
export PATH="$HOME/.nix-profile/bin:$PATH"
export PATH="/nix/var/nix/profiles/default/bin:$PATH"
export PATH="$HOME/Software/bin:$PATH"
export PATH="$HOME/.cargo/bin:$PATH"

# ----------------------------------------------------------------------------
# EXTERNAL TOOL CONFIGURATION
# ----------------------------------------------------------------------------

# Configure zoxide (install from https://github.com/ajeetdsouza/zoxide)
if command -v zoxide &> /dev/null; then
    eval "$(zoxide init zsh)"
fi

# Configure FZF
if command -v fzf &> /dev/null; then
    export FZF_DEFAULT_COMMAND='find . -type f'
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
    export FZF_DEFAULT_OPTS='--height 40% --border'
fi

# GPG configuration
export GPG_TTY=$(tty)
gpg-connect-agent updatestartuptty /bye >/dev/null 2>&1

# ----------------------------------------------------------------------------
# KEY BINDINGS
# ----------------------------------------------------------------------------

# Configure key bindings for better navigation
bindkey "^[[H" beginning-of-line  # Home key
bindkey "^[[F" end-of-line        # End key
bindkey "^[[3~" delete-char       # Delete key

# ----------------------------------------------------------------------------
# CUSTOM FUNCTIONS
# ----------------------------------------------------------------------------

# Function: Quickly create a directory and move into it
function mkcd() {
    mkdir -p "$1" && cd "$1"
}

# Function: Git status shortcut with branch overview
function gst() {
    git status -sb
}

# Function: Kill processes by name
function kill-by-name() {
    pgrep -f "$1" | xargs kill -9
}

# ----------------------------------------------------------------------------
# ALIASES
# ----------------------------------------------------------------------------

# Editor and basic commands
alias vim="nvim"
alias ll="ls -lh"
alias la="ls -lha"
alias j="just"
alias q="exit"
alias grep="grep --color=auto"

# Git aliases
alias g="git"
alias gc="git commit"

# System commands
alias open="xdg-open"
alias pinstall="sudo pacman -Syu"
alias reboot="sudo shutdown -r 0"

# Application shortcuts
alias music="ncmpcpp"

# Display brightness and color temperature (Hyprland/hyprsunset)
alias lbright="hyprctl hyprsunset gamma 50"
alias hbright="hyprctl hyprsunset gamma 100"
alias blight="hyprctl hyprsunset temperature 2500"
alias nblight="hyprctl hyprsunset identity"

# VPN
alias vpn="sudo $HOME/.nix-profile/bin/openconnect"
